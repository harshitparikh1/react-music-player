{"version":3,"sources":["components/PlayerDetails.js","components/PlayerControls.js","components/Player.js","App.js","index.js"],"names":["PlayerDetails","props","className","src","song","img_src","alt","title","artist","PlayerControls","onClick","SkipSong","icon","faBackward","setIsPlaying","isPlaying","faPause","faPlay","faForward","Player","AudioEl","useRef","useState","useEffect","current","play","pause","songs","currentSongIndex","ref","forwards","setCurrentSongIndex","temp","length","nextSongIndex","App","setNextSongIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAceA,MAZf,SAAuBC,GACnB,OACI,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,eACV,yBAAKC,IAAKF,EAAMG,KAAKC,QAASC,IAAI,MAEvC,wBAAIJ,UAAU,iBAAiBD,EAAMG,KAAKG,OAC1C,wBAAIL,UAAU,kBAAkBD,EAAMG,KAAKI,U,cCWxCC,MAhBf,SAAwBR,GACpB,OACI,yBAAKC,UAAU,sBACX,4BAAQA,UAAU,WAAWQ,QAAS,kBAAMT,EAAMU,UAAS,KACvD,kBAAC,IAAD,CAAiBC,KAAMC,OAE3B,4BAAQX,UAAU,WAAWQ,QAAS,kBAAMT,EAAMa,cAAcb,EAAMc,aAClE,kBAAC,IAAD,CAAiBH,KAAMX,EAAMc,UAAYC,IAAUC,OAEvD,4BAAQf,UAAU,WAAWQ,QAAS,kBAAMT,EAAMU,aAC9C,kBAAC,IAAD,CAAiBC,KAAMM,SCgDxBC,MA1Df,SAAgBlB,GAEZ,IAAMmB,EAAUC,iBAAO,MAFJ,EAGeC,oBAAS,GAHxB,mBAGZP,EAHY,KAGDD,EAHC,KAwCnB,OAnCAS,qBAAU,WACHR,EACCK,EAAQI,QAAQC,OAGhBL,EAAQI,QAAQE,WA+BpB,yBAAKxB,UAAU,YACX,2BAAOC,IAAKF,EAAM0B,MAAM1B,EAAM2B,kBAAkBzB,IAAK0B,IAAKT,GAA1D,KACA,6CACA,kBAAC,EAAD,CACIhB,KAAMH,EAAM0B,MAAM1B,EAAM2B,oBAE5B,kBAAC,EAAD,CACIb,UAAaA,EACbD,aAAgBA,EAChBH,SApCK,WAAsB,IAArBmB,IAAoB,yDAC/BA,EACC7B,EAAM8B,qBAAoB,WACtB,IAAIC,EAAO/B,EAAM2B,iBAOjB,QANAI,EAEW/B,EAAM0B,MAAMM,OAAS,IAC5BD,EAAO,GAGJA,KAGX/B,EAAM8B,qBAAoB,WACtB,IAAIC,EAAO/B,EAAM2B,iBAOjB,QANAI,EAEW,IACPA,EAAO/B,EAAM0B,MAAMM,OAAS,GAGzBD,QAkBX,+BAAI,8CAAJ,IAAiC/B,EAAM0B,MAAM1B,EAAMiC,eAAe3B,MAAlE,OAA6EN,EAAM0B,MAAM1B,EAAMiC,eAAe1B,OAA9G,OCUG2B,MAhEf,WAAgB,IAAD,EACGb,mBAAS,CACvB,CACEf,MAAO,2BACPC,OAAQ,oBACRH,QAAS,sBACTF,IAAK,uBAEP,CACEI,MAAO,UACPC,OAAQ,UACRH,QAAS,sBACTF,IAAK,4BAEP,CACEI,MAAO,aACPC,OAAQ,SACRH,QAAS,sBACTF,IAAK,iCAEP,CACEI,MAAO,YACPC,OAAQ,cACRH,QAAS,sBACTF,IAAK,2BAvBFwB,EADM,sBA4BmCL,mBAAS,GA5B5C,mBA4BNM,EA5BM,KA4BYG,EA5BZ,OA6B6BT,mBAASM,EAAmB,GA7BzD,mBA6BNM,EA7BM,KA6BSE,EA7BT,KAoDb,OArBAb,qBAAU,WACRa,GAAiB,WACf,OAAIR,EAAmB,EAAID,EAAMM,OAAS,EACjC,EAEAL,EAAmB,OAG7B,CAACA,EAAkBD,IAcpB,yBAAKzB,UAAU,OACX,kBAAC,EAAD,CACI0B,iBAAoBA,EACpBG,oBAAuBA,EACvBG,cAAiBA,EACjBP,MAASA,MCxDrBU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d05a1f33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PlayerDetails(props) {\r\n    return (\r\n        <div className=\"c-player--details\">\r\n            <div className=\"details-img\">\r\n                 <img src={props.song.img_src} alt=\"\" /> \r\n            </div>\r\n            <h3 className=\"details-title\">{props.song.title}</h3>\r\n            <h4 className=\"details-artist\">{props.song.artist}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerDetails\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction PlayerControls(props) {\r\n    return (\r\n        <div className=\"c-player--controls\">\r\n            <button className=\"skip-btn\" onClick={() => props.SkipSong(false)}>\r\n                <FontAwesomeIcon icon={faBackward} />\r\n            </button>\r\n            <button className=\"play-btn\" onClick={() => props.setIsPlaying(!props.isPlaying)}>\r\n                <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} />\r\n            </button>\r\n            <button className=\"skip-btn\" onClick={() => props.SkipSong()}>\r\n                <FontAwesomeIcon icon={faForward} />\r\n            </button>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default PlayerControls\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport PlayerDetails from \"./PlayerDetails\"\r\nimport PlayerControls from \"./PlayerControls\"\r\n\r\nfunction Player(props) {\r\n\r\n    const AudioEl = useRef(null)\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(isPlaying){\r\n            AudioEl.current.play();\r\n        }\r\n        else {\r\n            AudioEl.current.pause();\r\n        }\r\n    })\r\n\r\n    const SkipSong = (forwards = true) => {\r\n        if(forwards) {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp++\r\n\r\n                if (temp > props.songs.length - 1){\r\n                    temp = 0\r\n                }\r\n\r\n                return temp\r\n            })\r\n        } else {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp--\r\n\r\n                if (temp < 0 ){\r\n                    temp = props.songs.length - 1\r\n                }\r\n\r\n                return temp\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-player\">\r\n            <audio src={props.songs[props.currentSongIndex].src} ref={AudioEl}> </audio>\r\n            <h4> Playing Now </h4>\r\n            <PlayerDetails \r\n                song={props.songs[props.currentSongIndex]} \r\n            />\r\n            <PlayerControls \r\n                isPlaying = {isPlaying} \r\n                setIsPlaying = {setIsPlaying} \r\n                SkipSong = {SkipSong} \r\n            />\r\n\r\n            <p> <strong> Next Up: </strong> {props.songs[props.nextSongIndex].title} by {props.songs[props.nextSongIndex].artist} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React, { useState, useEffect } from 'react';\nimport Player from \"./components/Player\"\n\nfunction App() {\n  const [songs] = useState([\n    {\n      title: \"Forget me too ft. Halsey\",\n      artist: \"Machine Gun Kelly\",\n      img_src: \"./images/song-1.jpg\",\n      src: \"./music/on-n-on.mp3\"\n    },\n    {\n      title: \"On & On\",\n      artist: \"Cartoon\",\n      img_src: \"./images/song-2.jpg\",\n      src: \"./music/somebody-new.mp3\"\n    },\n    {\n      title: \"The Nights\",\n      artist: \"Avicii\",\n      img_src: \"./images/song-3.jpg\",\n      src: \"./music/Avicii-The-Nights.mp3\"\n    },\n    {\n      title: \"On my way\",\n      artist: \"Alan Walker\",\n      img_src: \"./images/song-4.jpg\",\n      src: \"./music/On-My-Way.mp3\"\n    }\n  ]);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(currentSongIndex + 1);\n\n  useEffect(() => {\n    setNextSongIndex(() => {\n      if (currentSongIndex + 1 > songs.length - 1) {\n        return 0;\n      } else {\n        return currentSongIndex + 1;\n      }\n    });\n  }, [currentSongIndex, songs]);\n\n  // To remove the console error we can use the below code but this causes infinite loop.\n  // useEffect(\n  //   setNextSongIndex(() => {\n  //     if (currentSongIndex + 1 > songs.length - 1) {\n  //       return 0;\n  //     } else {\n  //       return currentSongIndex + 1;\n  //     }\n  //   })\n  // , [currentSongIndex]);\n\n  return (\n    <div className=\"App\"> \n        <Player \n            currentSongIndex = {currentSongIndex}\n            setCurrentSongIndex = {setCurrentSongIndex}\n            nextSongIndex = {nextSongIndex}\n            songs = {songs}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}